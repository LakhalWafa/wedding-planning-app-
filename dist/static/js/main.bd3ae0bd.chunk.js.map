{"version":3,"sources":["components/layout/SignedIn.js","store/actions/authActions.js","components/layout/SignedOut.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/project/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","react","className","react_router_dom","to","activeStyle","fontWeight","onClick","style","cursor","borderRadius","profile","initials","SignedOut","state","firebase","links","uid","layout_SignedIn","layout_SignedOut","fontSize","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Notification","notifications","map","not","key","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","format","ProjectList","projects","textDecoration","color","project_ProjectSummary","Dashboard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this$props","project_ProjectList","dashboard_Notification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","class","role","CreateProject","handleSubmit","e","preventDefault","_this","createProject","history","push","handleChange","setState","defineProperty","target","onSubmit","boxShadow","padding","border","backgroundColor","htmlFor","placeholder","onChange","rows","width","marginLeft","getFirestore","authorId","add","objectSpread","firstName","lastName","Date","catch","err","SignIn","email","password","signIn","authError","display","justifyContent","alignItems","creds","credentials","signInWithEmailAndPassword","SignUp","firstname","lastname","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","doc","set","LastName","console","log","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd3ae0bd.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedIn = props => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"nav-item mx-3\">\r\n        <NavLink\r\n          className=\"nav-link\"\r\n          to=\"/createproject\"\r\n          activeStyle={{ fontWeight: '400' }}\r\n        >\r\n          New Project\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item mx-3\">\r\n        {\r\n          // eslint-disable-next-line\r\n          <a\r\n            className=\"nav-link\"\r\n            onClick={props.signOut}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            Log Out\r\n          </a>\r\n        }\r\n      </li>\r\n      <li className=\"mx-3\">\r\n        <NavLink\r\n          className=\"nav-link btn btn-danger\"\r\n          style={{ borderRadius: '50%' }}\r\n          to=\"/\"\r\n        >\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchtoProps\r\n)(SignedIn);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'LOGOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.LastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n    console.log(firestore);\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOut = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"nav-item mx-3\">\r\n        <NavLink\r\n          className=\"nav-link\"\r\n          to=\"/signup\"\r\n          activeStyle={{ fontWeight: '400' }}\r\n        >\r\n          Signup\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item mx-3\">\r\n        <NavLink\r\n          className=\"nav-link\"\r\n          to=\"/signin\"\r\n          activeStyle={{ fontWeight: '400' }}\r\n        >\r\n          Login\r\n        </NavLink>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignedOut;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedIn from './SignedIn';\r\nimport SignedOut from './SignedOut';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedIn profile={profile} /> : <SignedOut />;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link\r\n            className=\"navbar-brand\"\r\n            to=\"/\"\r\n            style={{\r\n              fontWeight: '600',\r\n              fontSize: '35px'\r\n            }}\r\n          >\r\n            Wedding Planning\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse d-flex flex-row-reverse\"\r\n            id=\"navbarNav\"\r\n          >\r\n            <ul className=\"navbar-nav\">{links}</ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notification = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Notifications</h5>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {notifications &&\r\n              notifications.map(not => {\r\n                return (\r\n                  <li key={not.id} className=\"list-group-item\">\r\n                    {' '}\r\n                    <span className=\"text-danger\">{not.user} </span>\r\n                    <span>{not.content} </span>\r\n                    <div className=\"text-muted\">\r\n                      {moment(not.time.toDate()).fromNow()}{' '}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{project.title}</h5>\r\n        <p className=\"card-text\">\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"card-text\">\r\n          <small className=\"text-muted\">\r\n            {' '}\r\n            {moment(project.createdAt.toDate()).format('MMMM Do YYYY, h:mm a')}\r\n          </small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list mx-4 my-4\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link\r\n              to={'project/' + project.id}\r\n              key={project.id}\r\n              style={{ textDecoration: 'none', color: '#383838' }}\r\n            >\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../project/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 col-sm-12\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col-md-5 col-sm-12 offset-md-1\">\r\n            <Notification notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStatetoProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container my-4 project-details\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{project.title} </h5>\r\n            <p className=\"card-text\">{project.content}</p>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">\r\n            <p className=\"card-text\">\r\n              {' '}\r\n              Posted by {project.authorFirstName} {project.authorLastName}{' '}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">\r\n                {moment(project.createdAt.toDate()).format(\r\n                  'MMMM Do YYYY, h:mm a'\r\n                )}\r\n              </small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <div class=\"spinner-grow text-secondary mt-5\" role=\"status\">\r\n          <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div class=\"spinner-grow text-danger mt-5\" role=\"status\">\r\n          <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div class=\"spinner-grow text-dark mt-5\" role=\"status\">\r\n          <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStatetoProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStatetoProps),\r\n  firestoreConnect([{ collection: 'projects' }])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form\r\n          className=\" mt-5\"\r\n          onSubmit={this.handleSubmit}\r\n          style={{\r\n            boxShadow: '5px 10px 18px #888888',\r\n            padding: '70px',\r\n            border: '1px solid grey',\r\n            backgroundColor: 'white'\r\n          }}\r\n        >\r\n          <h5\r\n            className=\"text-center font-weight-bold text-danger\"\r\n            style={{ fontSize: '30px' }}\r\n          >\r\n            Create New Project\r\n          </h5>\r\n\r\n          <div className=\"form-group mt-4\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"Enter the project title\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"content\"\r\n              rows=\"4\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter the project content\"\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-danger center\"\r\n            style={{ width: '10%', marginLeft: '45%' }}\r\n          >\r\n            Create\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  mapDispatchtoProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection('projects')\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT', project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <form\r\n          className=\" mt-5\"\r\n          onSubmit={this.handleSubmit}\r\n          style={{\r\n            boxShadow: '5px 10px 18px #888888',\r\n            padding: '70px',\r\n            border: '1px solid grey',\r\n            backgroundColor: 'white'\r\n          }}\r\n        >\r\n          <h5\r\n            className=\"text-center font-weight-bold text-danger\"\r\n            style={{ fontSize: '30px' }}\r\n          >\r\n            Sign In\r\n          </h5>\r\n\r\n          <div className=\"form-group text-center mt-4\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group text-center\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-danger center\"\r\n            style={{ width: '50%', marginLeft: '25%' }}\r\n          >\r\n            Login\r\n          </button>\r\n          {authError ? (\r\n            <div className=\"alert alert-danger text-center mt-3\" role=\"alert\">\r\n              {authError}\r\n            </div>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  mapDispatchtoProps\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    lastname: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <form\r\n          className=\" mt-5 mb-5\"\r\n          onSubmit={this.handleSubmit}\r\n          style={{\r\n            boxShadow: '5px 10px 18px #888888',\r\n            padding: '100px',\r\n            border: '1px solid grey',\r\n            backgroundColor: 'white'\r\n          }}\r\n        >\r\n          <h5\r\n            className=\"text-center font-weight-bold text-danger\"\r\n            style={{ fontSize: '30px' }}\r\n          >\r\n            Sign Up\r\n          </h5>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col\">\r\n              <div className=\"form-group text-center\">\r\n                <label htmlFor=\"firstname\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"firstname\"\r\n                  placeholder=\"Enter your first name\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-center mt-5\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"form-group text-center\">\r\n                <label htmlFor=\"lastname\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"lastname\"\r\n                  placeholder=\"Enter your last name\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-center mt-5\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-danger mt-5\"\r\n            style={{ width: '50%', marginLeft: '25%' }}\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport CreateProject from './components/project/CreateProject';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/createproject\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      return { ...state, authError: 'Login Failed' };\r\n    case 'LOGIN_SUCCESS':\r\n      return { ...state, authError: null };\r\n    case 'LOGOUT_SUCCESS':\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      return { ...state, authError: null };\r\n    case 'SIGNUP_ERROR':\r\n      return { ...state, authError: action.err.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = {\r\n  projects: []\r\n};\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('created project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyDaXyR1pAp2roNmEEw-YM9TODtlTfVBPsM',\r\n  authDomain: 'wedding-planning-f65fd.firebaseapp.com',\r\n  databaseURL: 'https://wedding-planning-f65fd.firebaseio.com',\r\n  projectId: 'wedding-planning-f65fd',\r\n  storageBucket: 'wedding-planning-f65fd.appspot.com',\r\n  messagingSenderId: '759833530069'\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}